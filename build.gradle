plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'jacoco'
	id 'checkstyle'
	id 'org.liquibase.gradle' version '2.2.0'
}

group = 'com.biscof'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-cache:3.1.5'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis:3.1.5'
	implementation 'org.liquibase:liquibase-core'
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.github.database-rider:rider-junit5:1.36.0'
	testImplementation 'org.mockito:mockito-core:5.7.0'

}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

// Generate test coverage reports in the xml format
jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
	}
}

checkstyle {
	toolVersion '10.12.1'
}
